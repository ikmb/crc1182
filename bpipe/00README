0) GENERAL

This code base includes some basic processing pipelines for the collaborative research center 1182.

Everthing in this repository comes with absolutely no warranty. 

If you like to report issues or request features/changes, please get in touch with the repo owner. 

1) INSTALLATION

Bpipe is a pipeline framework written in Java/Groovy. To run the pipelines contained within
this code base, you need to install Bpipe, available from:

download.bpipe.org

The pipelines in this code base where tested with bpipe release 0.9.9.2:
http://download.bpipe.org/download/show/13

In addition, you need to set a few enviornment variables. Use the script setup.sh to 
get help with that. 

2) PIPELINES

Pipelines are located in the pipelines subfolder. Each pipeline consists of three files:

my_pipeline.bpipe - the actual pipeline logic. This is the file you execute with Bpipe. 
my_pipeline.config - A config file you need to copy to your current directory and modify. 
my_pipeline.readme - Some additional information about how to use the pipeline

Pipelines will load pipeline modules from the $BPIPE_LIB environment vairable; this
should already be set if you followed the instructions above. 

Finally, to run a pipeline on a compute cluster, you will also need a config file. By default, a
pipeline will read the config file of the same name from the pipeline folder. If you need to change
the config, copy that file to where you plan to run your analysis and make and adjustment needed. 

Likewise, resource requirements are specified in pipelines/bpipe.config. If you need to change 
the default settings (including use of resource manager), copy the file to you project folder and
modify it as needed. 
 
3) Example 

Let us assume we want to perform a simply preprocessing of amplicon data. The basic workflow will look
as follows:

Load dependencies, if needed (check the respective readme file)

bpipe test /path/to/code/bpipe/pipelines/AmpliconPreprocessing.bpipe *.fastq.gz

This will verify that everything looks ok. If it does, simply run the pipeline:

bpipe run /path/to/code/bpipe/pipelines/AmpliconPreprocessing.bpipe *.fastq.gz

Once the pipeline finishes, you can have Bpipe delete any intermediate files:

bpipe cleanup *

4) More about BPipe

http://docs.bpipe.org/

5) Known issues

This code base has the same limitations as Bpipe. 

- Requires a supported ResourceManager to run in cluster mode (i.e. it does not work on the Kiel NEC cluster)
